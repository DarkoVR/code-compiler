APP -> class id CLASS
CLASS -> { CLASS_BODY }
CLASS_BODY -> DECLARATION CLASS_BODY | METHOD CLASS_BODY | EPSILON
DECLARATION -> TYPING DATA_TYPE DECLARATOR_LIST
DECLARATOR_LIST -> ASSIGNMENT DECLARATOR_LIST’
DECLARATOR_LIST’ -> , ASSIGNMENT DECLARATOR_LIST’ | EPSILON

ASSIGNMENT -> id = OPERATION
TYPING -> val | var
VALUE -> id | de | dd | cs | true | false
DATA_TYPE -> String | Bool | Int | Float

METHOD -> fun id METHOD’
METHOD’ -> METHOD_EXPRESSION METHOD_RETURN
METHOD_EXPRESSION -> ( METHOD_PARAMETER )
METHOD_RETURN -> : DATA_TYPE METHOD_BODY | METHOD_BODY
METHOD_BODY ->{ METHOD_STATEMENT }
METHOD_STATEMENT -> STATEMENT RETURN_STATEMENT
METHOD_PARAMETER -> DATA_TYPE id PARAMETER_LIST’ | EPSILON
PARAMETER_LIST’ -> , PARAMETER_BODY PARAMETER_LIST’ | EPSILON
PARAMETER_BODY -> DATA_TYPE id
RETURN_STATEMENT -> return RETURN_VALUE
RETURN_VALUE -> VALUE | empty

STATEMENT ->  IF_STATEMENT STATEMENT | WHILE_STATEMENT STATEMENT | FOR_STATEMENT STATEMENT | STATEMENT_INVOCATION STATEMENT | EPSILON

IF_STATEMENT-> if IF_STATEMENT’
IF_STATEMENT’ -> STATEMENT_EXPRESSION STATEMENT_BODY IF_STATEMENT_ELSE
IF_STATEMENT_ELSE -> else STATEMENT_BODY

WHILE_STATEMENT -> while STATEMENT_EXPRESSION STATEMENT_BODY

FOR_STATEMENT -> for FOR_STATEMENT_EXPRESSION STATEMENT_BODY
FOR_STATEMENT_EXPRESSION -> ( FOR_STATEMENT_EXPRESSION’ )
FOR_STATEMENT_EXPRESSION’ -> FOR_STATEMENT_EXPRESSION_LEFT until FOR_STATEMENT_EXPRESSION_RIGHT
FOR_STATEMENT_EXPRESSION_LEFT -> id in de
FOR_STATEMENT_EXPRESSION_RIGHT ->  de | id

STATEMENT_INVOCATION -> call id METHOD_INVOCATION | ASSIGNMENT
METHOD_INVOCATION -> ( INVOCATION_PARAMETER_LIST )
INVOCATION_PARAMETER_LIST -> VALUE INVOCATION_PARAMETER_LIST’ | EPSILON
INVOCATION_PARAMETER_LIST’ -> , VALUE INVOCATION_PARAMETER_LIST’ | EPSILON

STATEMENT_EXPRESSION -> ( EXPRESSION )
STATEMENT_BODY -> { STATEMENT }

OPERATION -> VALUE OPERATION_LIST
OPERATION_LIST -> ARITHMETIC_OPERATOR VALUE OPERATION_LIST | EPSILON

EXPRESSION -> VALUE EXPRESSION’
EXPRESSION’ -> RELATIONAL_OPERATOR VALUE EXPRESSION_LIST | EPSILON
EXPRESSION_LIST -> LOGIC_OPERATOR EXPRESSION | EPSILON

ARITHMETIC_OPERATOR -> + | - | * | /
LOGIC_OPERATOR -> and | or
RELATIONAL_OPERATOR -> > | < | != | ==
